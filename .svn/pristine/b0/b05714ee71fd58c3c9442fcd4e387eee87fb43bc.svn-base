package cn.et.student.dao;

import cn.et.student.entity.Student;
import cn.et.student.entity.StudentExample;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import org.apache.log4j.Logger;

public interface StudentMapper {
	Logger logger = Logger.getLogger(StudentMapper.class);
	@Select("SELECT COUNT(*) FROM STUDENT WHERE SNAME LIKE '%${sname}%'")
	int getStudentCount(@Param("sname") String sname);
	
//	@Select("SELECT * FROM (SELECT T.*,ROWNUM RN FROM STUDENT T WHERE SNAME LIKE '%${sname}"+
//			"%') WHERE RN>=#{1} AND RN<=#{2}")
	@Select("SELECT * FROM STUDENT WHERE SNAME LIKE '%${sname}%' LIMIT #{1} , #{2}")
	List<Student> selectStudent(@Param("sname") String sname,Integer startIndex, Integer length);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @SelectProvider(type=StudentSqlProvider.class, method="countByExample")
    long countByExample(StudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @DeleteProvider(type=StudentSqlProvider.class, method="deleteByExample")
    int deleteByExample(StudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @Delete({
        "delete from SCOTT.STUDENT",
        "where SID = #{sid,jdbcType=DECIMAL}"
    })
    int deleteByPrimaryKey(Integer sid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @Insert({
        "insert into SCOTT.STUDENT (SID, SNAME, ",
        "GID, AGE, SEX)",
        "values (STUDENT_SEC.nextval, #{sname,jdbcType=VARCHAR}, ",
        "#{gid,jdbcType=DECIMAL}, #{age,jdbcType=DECIMAL}, #{sex,jdbcType=DECIMAL})"
    })
    int insert(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @InsertProvider(type=StudentSqlProvider.class, method="insertSelective")
    int insertSelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @SelectProvider(type=StudentSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="SID", property="sid", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="SNAME", property="sname", jdbcType=JdbcType.VARCHAR),
        @Result(column="GID", property="gid", jdbcType=JdbcType.DECIMAL),
        @Result(column="AGE", property="age", jdbcType=JdbcType.DECIMAL),
        @Result(column="SEX", property="sex", jdbcType=JdbcType.DECIMAL)
    })
    List<Student> selectByExample(StudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @Select({
        "select",
        "SID, SNAME, GID, AGE, SEX",
        "from SCOTT.STUDENT",
        "where SID = #{sid,jdbcType=DECIMAL}"
    })
    @Results({
        @Result(column="SID", property="sid", jdbcType=JdbcType.DECIMAL, id=true),
        @Result(column="SNAME", property="sname", jdbcType=JdbcType.VARCHAR),
        @Result(column="GID", property="gid", jdbcType=JdbcType.DECIMAL),
        @Result(column="AGE", property="age", jdbcType=JdbcType.DECIMAL),
        @Result(column="SEX", property="sex", jdbcType=JdbcType.DECIMAL)
    })
    Student selectByPrimaryKey(Integer sid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @UpdateProvider(type=StudentSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Student record, @Param("example") StudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @UpdateProvider(type=StudentSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Student record, @Param("example") StudentExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @UpdateProvider(type=StudentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SCOTT.STUDENT
     *
     * @mbg.generated Sat Dec 09 09:49:31 CST 2017
     */
    @Update({
        "update SCOTT.STUDENT",
        "set SNAME = #{sname,jdbcType=VARCHAR},",
          "GID = #{gid,jdbcType=DECIMAL},",
          "AGE = #{age,jdbcType=DECIMAL},",
          "SEX = #{sex,jdbcType=DECIMAL}",
        "where SID = #{sid,jdbcType=DECIMAL}"
    })
    int updateByPrimaryKey(Student record);
}